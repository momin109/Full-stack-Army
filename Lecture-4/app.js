// Runtime : যে সময়ে কম্পিউটার সত্যি-সত্যি কাজ করছে;


/* 

1. compile time vs runtime
কম্পাইল টাইম হল সেই সময়কাল যখন প্রোগ্রামিং কোড (যেমন C#, Java, C, Python) মেশিন কোডে (যেমন বাইনারি কোড) রূপান্তরিত হয়। রানটাইম হল সময়কাল যখন একটি প্রোগ্রাম চলছে এবং সাধারণত কম্পাইল সময়ের পরে ঘটে।

compile time vs runtime
কম্পাইল-টাইম এবং রানটাইম দুটি প্রোগ্রামিং শব্দ যা সফ্টওয়্যার বিকাশে ব্যবহৃত হয়। কম্পাইল-টাইম হল সেই সময় যেখানে সোর্স কোড একটি এক্সিকিউটেবল কোডে রূপান্তরিত হয় এবং রান টাইম হল সেই সময় যে সময়ে এক্সিকিউটেবল কোড চালানো শুরু হয়। কম্পাইল-টাইম এবং রানটাইম উভয়ই বিভিন্ন ধরনের ত্রুটিকে নির্দেশ করে।


2.what is interpreter
যে অনুবাদক প্রোগ্রাম হাই লেভেল ল্যাঙ্গুয়েজে লিখিত প্রোগ্রামের সোর্স কোডকে এক লাইন এক লাইন করে মেশিনের ভাষায় অনুবাদ করে, কোন ভুল থাকলে তা সংশোধন করে পরবর্তী লাইনে কাজ করে তাকে ইন্টারপ্রেটার বলে। একটি লাইন নির্বাহ শেষ হলে ইন্টারপ্রেটার একইভাবে উৎস প্রোগ্রামের পরবর্তী লাইনে গিয়ে মেশিন ভাষায় অনুবাদ করে তা নির্বাহ করে। কম্পাইলার উৎস প্রোগ্রামকে সরাসরি মেশিন ল্যাঙ্গুয়েজে রূপান্তর করে নির্বাহ করে।


আর তাই ইন্টারপ্রেটার উৎস প্রোগ্রামকে রান করানোর জন্য সিপিইউ এবং প্রোগ্রামের মধ্যে একটি মাধ্যম হিসেবে কাজ করে। BASIC এবং LISP প্রোগ্রামকে এমনভাবে তৈরি করা হয়েছে যাতে এদের সোর্সকোডকে মেশিন ল্যাঙ্গুয়েজে রূপান্তরের জন্য ইন্টারনেটের প্রয়োজন হয় ইন্টারপ্রেটার প্রয়োজন হয়। ইন্টারপ্রেটার প্রোগ্রাম নির্বাহ বা রান করার সময় দেখা এবং সংশোধন করার সুযোগ দেয়। 
ইন্টারপ্রেটারের সুবিধা?
ইন্টারপ্রেটার অধিক ব্যবহার বান্ধব। 
অনূদিত অবজেক্ট প্রোগ্রামকে মেমোরিতে সংরক্ষণ করে রাখতে হয় না।
ছোট কম্পিউটারে সাধারণত ইন্টারপ্রেটার ব্যবহার করা হয়। 
ইন্টারপ্রেটার আকারে ছোট বলে মেমোরি কম খরচ হয়।
ইন্টারপ্রেটারের অসুবিধা?
প্রোগ্রাম কার্যকরী করতে কম্পাইলারের তুলনায় ৫ থেকে ২৫ গুণ বেশি সময় লাগে।
যতবার প্রোগ্রাম কার্যকরী করতে হয় ততবারই প্রোগ্রামের নির্দেশগুলো একটির পর একটি অনুবাদ করতে হয়।

3.

কম্পাইলার
সম্পূর্ণ প্রোগ্রামটিকে একসাথে অনুবাদ করে।
ডিবাগিং ও টেস্টিং এর ক্ষেত্রে দ্রুত গতিসম্পন্ন। 
গ্রোগ্রাম নির্বাহে বেশি সময় লাগে। 
অনুবাদকৃত প্রোগ্রামটি পূর্ণাঙ্গ মেশিন প্রোগ্রামে রুপান্তরিত করে।
এক লাইন করে ভুল প্রদর্শন করে অনুবাদ বন্ধ করে দেয়।
কাজের প্রক্রিয়া অপেক্ষাকৃত সহজ।
প্রধান মেমোরিতে জায়গা বেশি লাগে। 
প্রতিবার কাজের পূর্বে পুনঃরুপান্তরের প্রয়োজন হয় না।

ইন্টারপ্রিটার
এক লাইন করে পড়ে এবং অনুবাদ করে।
ডিবাগিং ও টেস্টিং এর ক্ষেত্রে দ্রুত গতিসম্পন্ন। 
গ্রোগ্রাম নির্বাহে বেশি সময় লাগে। 
অনুবাদকৃত প্রোগ্রামটি পূর্ণাঙ্গ মেশিন প্রোগ্রামে রুপান্তর হয় না।
সবগুলো ভুল একসাথে প্রদর্শন করে।
কাজের প্রক্রিয়া জটিল। 
প্রধান মেমোরিতে জায়গা কম লাগে। 
একবার কম্পাইল অর্থাৎ রুপান্তর করার পর পুনরায় কম্পাইল করার প্রয়োজন হয়


4. no

//: PROPS
1.ডেটা এক উপাদান থেকে অন্য উপাদানে প্রেরণ করা হয়।
2.এটি অপরিবর্তনীয় (পরিবর্তন করা যাবে না)।
3.Props can be used with state and functional components. রাজ্য এবং কার্যকরী উপাদানগুলির সাথে প্রপস ব্যবহার করা যেতে পারে।
4.Props are read-only.প্রপস শুধুমাত্র পঠনযোগ্য.


//: STATE
1.The Data is passed within the component only.তথ্য শুধুমাত্র উপাদান মধ্যে পাস করা হয়.
2.It is Mutable ( can be modified).এটি পরিবর্তনযোগ্য (পরিবর্তন করা যেতে পারে)।
3.The state can be used only with the state components/class component (Before 16.0).স্টেট শুধুমাত্র স্টেট কম্পোনেন্ট/ক্লাস কম্পোনেন্টের সাথে ব্যবহার করা যেতে পারে (16.0 এর আগে)।
4.The state is both read and write.রাষ্ট্র লেখা-পড়া দুটোই।


//== static data
JavaScript static is labeled by a keyword known as the 'static' keyword. JavaScript const is labeled by a keyword known as the 'const' keyword, where we declare a const variable and initialize it with a constant value. JavaScript static can be used with classes and methods also.

জাভাস্ক্রিপ্ট স্ট্যাটিক একটি কীওয়ার্ড দ্বারা লেবেল করা হয় যা 'স্ট্যাটিক' কীওয়ার্ড নামে পরিচিত। JavaScript const কে 'const' কীওয়ার্ড হিসাবে পরিচিত একটি কীওয়ার্ড দ্বারা লেবেল করা হয়, যেখানে আমরা একটি কনস্ট ভেরিয়েবল ঘোষণা করি এবং এটিকে একটি ধ্রুবক মান দিয়ে শুরু করি। জাভাস্ক্রিপ্ট স্ট্যাটিক ক্লাস এবং পদ্ধতির সাথেও ব্যবহার করা যেতে পারে।
*/